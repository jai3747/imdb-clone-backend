# # # # # MongoDB Secret
# # # # apiVersion: v1
# # # # kind: Secret
# # # # metadata:
# # # #   name: mongodb-secret
# # # # type: Opaque
# # # # stringData:
# # # #   MONGO_URL: "mongodb+srv://jayachandran:jc@3747@jai@cluster0.w45he.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"

# # # # ---
# # # # # MongoDB ConfigMap
# # # # apiVersion: v1
# # # # kind: ConfigMap
# # # # metadata:
# # # #   name: mongodb-configmap
# # # # data:
# # # #   MONGODB_INITDB_DATABASE: "imdb"

# # # # ---
# # # # # MongoDB PersistentVolumeClaim
# # # # apiVersion: v1
# # # # kind: PersistentVolumeClaim
# # # # metadata:
# # # #   name: mongodb-pvc
# # # # spec:
# # # #   accessModes:
# # # #     - ReadWriteOnce
# # # #   resources:
# # # #     requests:
# # # #       storage: 1Gi

# # # # ---
# # # # # MongoDB Deployment
# # # # apiVersion: apps/v1
# # # # kind: Deployment
# # # # metadata:
# # # #   name: mongodb-deployment
# # # # spec:
# # # #   replicas: 1
# # # #   selector:
# # # #     matchLabels:
# # # #       app: mongodb
# # # #   template:
# # # #     metadata:
# # # #       labels:
# # # #         app: mongodb
# # # #     spec:
# # # #       containers:
# # # #       - name: mongodb
# # # #         image: mongo:latest
# # # #         ports:
# # # #         - containerPort: 27017
# # # #         env:
# # # #         - name: MONGO_INITDB_DATABASE
# # # #           valueFrom:
# # # #             configMapKeyRef:
# # # #               name: mongodb-configmap
# # # #               key: MONGODB_INITDB_DATABASE
# # # #         volumeMounts:
# # # #         - name: mongodb-data
# # # #           mountPath: /data/db
# # # #       volumes:
# # # #       - name: mongodb-data
# # # #         persistentVolumeClaim:
# # # #           claimName: mongodb-pvc

# # # # ---
# # # # # MongoDB Service
# # # # apiVersion: v1
# # # # kind: Service
# # # # metadata:
# # # #   name: mongodb-service
# # # # spec:
# # # #   type: ClusterIP
# # # #   ports:
# # # #   - port: 27017
# # # #     targetPort: 27017
# # # #   selector:
# # # #     app: mongodb

# # # # ---
# # # # # Backend Deployment
# # # # apiVersion: apps/v1
# # # # kind: Deployment
# # # # metadata:
# # # #   name: backend-deployment
# # # # spec:
# # # #   replicas: 1
# # # #   selector:
# # # #     matchLabels:
# # # #       app: backend
# # # #   template:
# # # #     metadata:
# # # #       labels:
# # # #         app: backend
# # # #     spec:
# # # #       containers:
# # # #       - name: backend
# # # #         image: jai3747/imdb-clone-backend:v20
# # # #         imagePullPolicy: Always
# # # #         ports:
# # # #         - containerPort: 5000
# # # #         env:
# # # #         - name: PORT
# # # #           value: "5000"
# # # #         - name: NODE_ENV
# # # #           value: "production"
# # # #         readinessProbe:
# # # #           httpGet:
# # # #             path: /api/health
# # # #             port: 5000
# # # #           initialDelaySeconds: 30
# # # #           periodSeconds: 10
# # # #           timeoutSeconds: 5
# # # #           successThreshold: 1
# # # #           failureThreshold: 3
# # # #         livenessProbe:
# # # #           httpGet:
# # # #             path: /api/health
# # # #             port: 5000
# # # #           initialDelaySeconds: 60
# # # #           periodSeconds: 20
# # # #           timeoutSeconds: 5
# # # #           successThreshold: 1
# # # #           failureThreshold: 3
# # # #         resources:
# # # #           requests:
# # # #             memory: "256Mi"
# # # #             cpu: "100m"
# # # #           limits:
# # # #             memory: "512Mi"
# # # #             cpu: "200m"

# # # # ---
# # # # # Backend Service
# # # # apiVersion: v1
# # # # kind: Service
# # # # metadata:
# # # #   name: backend-service
# # # # spec:
# # # #   type: LoadBalancer
# # # #   ports:
# # # #   - port: 5000
# # # #     targetPort: 5000
# # # #     protocol: TCP
# # # #   selector:
# # # #     app: backend

# # # # ---
# # # # # Frontend Deployment
# # # # apiVersion: apps/v1
# # # # kind: Deployment
# # # # metadata:
# # # #   name: frontend-deployment
# # # # spec:
# # # #   replicas: 1
# # # #   selector:
# # # #     matchLabels:
# # # #       app: frontend
# # # #   template:
# # # #     metadata:
# # # #       labels:
# # # #         app: frontend
# # # #     spec:
# # # #       containers:
# # # #       - name: frontend
# # # #         image: jai3747/imdb-clone-frontend:v20
# # # #         imagePullPolicy: Always
# # # #         ports:
# # # #         - containerPort: 3000
# # # #         env:
# # # #         - name: HOST
# # # #           value: "0.0.0.0"
# # # #         - name: PORT
# # # #           value: "3000"
# # # #         - name: REACT_APP_API_URL
# # # #           value: "http://34.100.172.207:5000/api"
# # # #         - name: NODE_ENV
# # # #           value: "production"
# # # #         readinessProbe:
# # # #           httpGet:
# # # #             path: /
# # # #             port: 3000
# # # #           initialDelaySeconds: 30
# # # #           periodSeconds: 10
# # # #           timeoutSeconds: 5
# # # #         livenessProbe:
# # # #           httpGet:
# # # #             path: /
# # # #             port: 3000
# # # #           initialDelaySeconds: 60
# # # #           periodSeconds: 20
# # # #           timeoutSeconds: 5
# # # #         resources:
# # # #           requests:
# # # #             memory: "256Mi"
# # # #             cpu: "100m"
# # # #           limits:
# # # #             memory: "512Mi"
# # # #             cpu: "200m"

# # # # ---
# # # # # Frontend Service
# # # # apiVersion: v1
# # # # kind: Service
# # # # metadata:
# # # #   name: frontend-service
# # # # spec:
# # # #   type: LoadBalancer
# # # #   ports:
# # # #   - port: 3000
# # # #     targetPort: 3000
# # # #     protocol: TCP
# # # #   selector:
# # # #     app: frontend
# # # # MongoDB Secret
# # # apiVersion: v1
# # # kind: Secret
# # # metadata:
# # #   name: mongodb-secret
# # # type: Opaque
# # # stringData:
# # #   MONGO_URL: ${MONGO_URL}  # This should be injected from GitHub Secrets

# # # ---
# # # # MongoDB ConfigMap
# # # apiVersion: v1
# # # kind: ConfigMap
# # # metadata:
# # #   name: mongodb-configmap
# # # data:
# # #   MONGODB_INITDB_DATABASE: "imdb"

# # # ---
# # # # MongoDB PersistentVolumeClaim
# # # apiVersion: v1
# # # kind: PersistentVolumeClaim
# # # metadata:
# # #   name: mongodb-pvc
# # # spec:
# # #   accessModes:
# # #     - ReadWriteOnce
# # #   resources:
# # #     requests:
# # #       storage: 1Gi

# # # ---
# # # # MongoDB Deployment
# # # apiVersion: apps/v1
# # # kind: Deployment
# # # metadata:
# # #   name: mongodb-deployment
# # # spec:
# # #   replicas: 2
# # #   selector:
# # #     matchLabels:
# # #       app: mongodb
# # #   template:
# # #     metadata:
# # #       labels:
# # #         app: mongodb
# # #     spec:
# # #       securityContext:
# # #         fsGroup: 999
# # #         runAsUser: 999
# # #         runAsNonRoot: true
# # #       containers:
# # #       - name: mongodb
# # #         image: mongo:6.0  # Specify a fixed version
# # #         ports:
# # #         - containerPort: 27017
# # #         env:
# # #         - name: MONGO_INITDB_DATABASE
# # #           valueFrom:
# # #             configMapKeyRef:
# # #               name: mongodb-configmap
# # #               key: MONGODB_INITDB_DATABASE
# # #         securityContext:
# # #           allowPrivilegeEscalation: false
# # #           capabilities:
# # #             drop:
# # #               - ALL
# # #           readOnlyRootFilesystem: true
# # #         resources:
# # #           requests:
# # #             memory: "512Mi"
# # #             cpu: "250m"
# # #           limits:
# # #             memory: "1Gi"
# # #             cpu: "500m"
# # #         volumeMounts:
# # #         - name: mongodb-data
# # #           mountPath: /data/db
# # #         - name: mongodb-tmp
# # #           mountPath: /tmp
# # #       volumes:
# # #       - name: mongodb-data
# # #         persistentVolumeClaim:
# # #           claimName: mongodb-pvc
# # #       - name: mongodb-tmp
# # #         emptyDir: {}

# # # ---
# # # # MongoDB Service
# # # apiVersion: v1
# # # kind: Service
# # # metadata:
# # #   name: mongodb-service
# # # spec:
# # #   type: ClusterIP
# # #   ports:
# # #   - port: 27017
# # #     targetPort: 27017
# # #   selector:
# # #     app: mongodb

# # # ---
# # # # Backend Deployment
# # # apiVersion: apps/v1
# # # kind: Deployment
# # # metadata:
# # #   name: backend-deployment
# # # spec:
# # #   replicas: 2  # Increased for high availability
# # #   selector:
# # #     matchLabels:
# # #       app: backend
# # #   template:
# # #     metadata:
# # #       labels:
# # #         app: backend
# # #     spec:
# # #       securityContext:
# # #         runAsNonRoot: true
# # #         runAsUser: 1000
# # #         fsGroup: 2000
# # #       containers:
# # #       - name: backend
# # #         image: jai3747/imdb-clone-backend:latest
# # #         imagePullPolicy: Always
# # #         ports:
# # #         - containerPort: 5000
# # #         env:
# # #         - name: PORT
# # #           value: "5000"
# # #         - name: NODE_ENV
# # #           value: "production"
# # #         - name: MONGO_URL
# # #           valueFrom:
# # #             secretKeyRef:
# # #               name: mongodb-secret
# # #               key: MONGO_URL
# # #         securityContext:
# # #           allowPrivilegeEscalation: false
# # #           capabilities:
# # #             drop:
# # #               - ALL
# # #           readOnlyRootFilesystem: true
# # #         readinessProbe:
# # #           httpGet:
# # #             path: /api/health
# # #             port: 5000
# # #           initialDelaySeconds: 30
# # #           periodSeconds: 10
# # #           timeoutSeconds: 5
# # #           successThreshold: 1
# # #           failureThreshold: 3
# # #         livenessProbe:
# # #           httpGet:
# # #             path: /api/health
# # #             port: 5000
# # #           initialDelaySeconds: 60
# # #           periodSeconds: 20
# # #           timeoutSeconds: 5
# # #           successThreshold: 1
# # #           failureThreshold: 3
# # #         resources:
# # #           requests:
# # #             memory: "256Mi"
# # #             cpu: "100m"
# # #           limits:
# # #             memory: "512Mi"
# # #             cpu: "200m"
# # #         volumeMounts:
# # #         - name: tmp
# # #           mountPath: /tmp
# # #       volumes:
# # #       - name: tmp
# # #         emptyDir: {}

# # # ---
# # # # Backend Service
# # # apiVersion: v1
# # # kind: Service
# # # metadata:
# # #   name: backend-service
# # # spec:
# # #   type: ClusterIP  # Changed from LoadBalancer for internal access
# # #   ports:
# # #   - port: 5000
# # #     targetPort: 5000
# # #     protocol: TCP
# # #   selector:
# # #     app: backend

# # # ---
# # # # Frontend Deployment
# # # apiVersion: apps/v1
# # # kind: Deployment
# # # metadata:
# # #   name: frontend-deployment
# # # spec:
# # #   replicas: 2  # Increased for high availability
# # #   selector:
# # #     matchLabels:
# # #       app: frontend
# # #   template:
# # #     metadata:
# # #       labels:
# # #         app: frontend
# # #     spec:
# # #       securityContext:
# # #         runAsNonRoot: true
# # #         runAsUser: 1000
# # #         fsGroup: 2000
# # #       containers:
# # #       - name: frontend
# # #         image: jai3747/imdb-clone-frontend:latest
# # #         imagePullPolicy: Always
# # #         ports:
# # #         - containerPort: 3000
# # #         env:
# # #         - name: HOST
# # #           value: "0.0.0.0"
# # #         - name: PORT
# # #           value: "3000"
# # #         - name: REACT_APP_API_URL
# # #           valueFrom:
# # #             configMapKeyRef:
# # #               name: frontend-config
# # #               key: api_url
# # #         - name: NODE_ENV
# # #           value: "production"
# # #         securityContext:
# # #           allowPrivilegeEscalation: false
# # #           capabilities:
# # #             drop:
# # #               - ALL
# # #           readOnlyRootFilesystem: true
# # #         readinessProbe:
# # #           httpGet:
# # #             path: /
# # #             port: 3000
# # #           initialDelaySeconds: 30
# # #           periodSeconds: 10
# # #           timeoutSeconds: 5
# # #         livenessProbe:
# # #           httpGet:
# # #             path: /
# # #             port: 3000
# # #           initialDelaySeconds: 60
# # #           periodSeconds: 20
# # #           timeoutSeconds: 5
# # #         resources:
# # #           requests:
# # #             memory: "256Mi"
# # #             cpu: "100m"
# # #           limits:
# # #             memory: "512Mi"
# # #             cpu: "200m"
# # #         volumeMounts:
# # #         - name: tmp
# # #           mountPath: /tmp
# # #       volumes:
# # #       - name: tmp
# # #         emptyDir: {}

# # # ---
# # # # Frontend Service
# # # apiVersion: v1
# # # kind: Service
# # # metadata:
# # #   name: frontend-service
# # # spec:
# # #   type: LoadBalancer
# # #   ports:
# # #   - port: 80  # Changed to standard HTTP port
# # #     targetPort: 3000
# # #     protocol: TCP
# # #   selector:
# # #     app: frontend

# # # ---
# # # # Frontend ConfigMap
# # # apiVersion: v1
# # # kind: ConfigMap
# # # metadata:
# # #   name: frontend-config
# # # data:
# # #   api_url: "http://backend-service:5000/api"  # Use internal DNS

# # # ---
# # # # Network Policies
# # # apiVersion: networking.k8s.io/v1
# # # kind: NetworkPolicy
# # # metadata:
# # #   name: backend-network-policy
# # # spec:
# # #   podSelector:
# # #     matchLabels:
# # #       app: backend
# # #   policyTypes:
# # #   - Ingress
# # #   - Egress
# # #   ingress:
# # #   - from:
# # #     - podSelector:
# # #         matchLabels:
# # #           app: frontend
# # #     ports:
# # #     - protocol: TCP
# # #       port: 5000
# # #   egress:
# # #   - to:
# # #     - podSelector:
# # #         matchLabels:
# # #           app: mongodb
# # #     ports:
# # #     - protocol: TCP
# # #       port: 27017

# # # ---
# # # # Pod Disruption Budget for Backend
# # # apiVersion: policy/v1
# # # kind: PodDisruptionBudget
# # # metadata:
# # #   name: backend-pdb
# # # spec:
# # #   minAvailable: 1
# # #   selector:
# # #     matchLabels:
# # #       app: backend

# # # ---
# # # # Pod Disruption Budget for Frontend
# # # apiVersion: policy/v1
# # # kind: PodDisruptionBudget
# # # metadata:
# # #   name: frontend-pdb
# # # spec:
# # #   minAvailable: 1
# # #   selector:
# # #     matchLabels:
# # #       app: frontend
# # # MongoDB Secret
# # apiVersion: v1
# # kind: Secret
# # metadata:
# #   name: mongodb-secret
# # type: Opaque
# # stringData:
# #   MONGO_URL: ${MONGO_URL}

# # ---
# # # MongoDB ConfigMap
# # apiVersion: v1
# # kind: ConfigMap
# # metadata:
# #   name: mongodb-configmap
# # data:
# #   MONGODB_INITDB_DATABASE: "imdb"

# # ---
# # # MongoDB Storage Class
# # apiVersion: storage.k8s.io/v1
# # kind: StorageClass
# # metadata:
# #   name: mongodb-sc
# # provisioner: kubernetes.io/gce-pd
# # parameters:
# #   type: pd-ssd

# # ---
# # # MongoDB StatefulSet
# # apiVersion: apps/v1
# # kind: StatefulSet
# # metadata:
# #   name: mongodb
# # spec:
# #   serviceName: mongodb-service
# #   replicas: 2
# #   selector:
# #     matchLabels:
# #       app: mongodb
# #   template:
# #     metadata:
# #       labels:
# #         app: mongodb
# #     spec:
# #       securityContext:
# #         fsGroup: 999
# #         runAsUser: 999
# #         runAsNonRoot: true
# #       containers:
# #       - name: mongodb
# #         image: mongo:6.0
# #         ports:
# #         - containerPort: 27017
# #         env:
# #         - name: MONGO_INITDB_DATABASE
# #           valueFrom:
# #             configMapKeyRef:
# #               name: mongodb-configmap
# #               key: MONGODB_INITDB_DATABASE
# #         resources:
# #           requests:
# #             memory: "512Mi"
# #             cpu: "250m"
# #           limits:
# #             memory: "1Gi"
# #             cpu: "500m"
# #         volumeMounts:
# #         - name: mongodb-data
# #           mountPath: /data/db
# #         - name: mongodb-tmp
# #           mountPath: /tmp
# #       volumes:
# #       - name: mongodb-tmp
# #         emptyDir: {}
# #   volumeClaimTemplates:
# #   - metadata:
# #       name: mongodb-data
# #     spec:
# #       accessModes: [ "ReadWriteOnce" ]
# #       storageClassName: mongodb-sc
# #       resources:
# #         requests:
# #           storage: 1Gi

# # ---
# # # MongoDB Service
# # apiVersion: v1
# # kind: Service
# # metadata:
# #   name: mongodb-service
# # spec:
# #   type: ClusterIP
# #   ports:
# #   - port: 27017
# #     targetPort: 27017
# #   selector:
# #     app: mongodb

# # ---
# # # Backend Deployment
# # apiVersion: apps/v1
# # kind: Deployment
# # metadata:
# #   name: backend-deployment
# # spec:
# #   replicas: 2
# #   selector:
# #     matchLabels:
# #       app: backend
# #   template:
# #     metadata:
# #       labels:
# #         app: backend
# #     spec:
# #       containers:
# #       - name: backend
# #         image: jai3747/imdb-clone-backend:latest
# #         imagePullPolicy: Always
# #         ports:
# #         - containerPort: 5000
# #         env:
# #         - name: PORT
# #           value: "5000"
# #         - name: NODE_ENV
# #           value: "production"
# #         - name: MONGO_URL
# #           valueFrom:
# #             secretKeyRef:
# #               name: mongodb-secret
# #               key: MONGO_URL
# #         readinessProbe:
# #           httpGet:
# #             path: /api/health
# #             port: 5000
# #           initialDelaySeconds: 30
# #           periodSeconds: 10
# #         livenessProbe:
# #           httpGet:
# #             path: /api/health
# #             port: 5000
# #           initialDelaySeconds: 60
# #           periodSeconds: 20
# #         resources:
# #           requests:
# #             memory: "256Mi"
# #             cpu: "100m"
# #           limits:
# #             memory: "512Mi"
# #             cpu: "200m"
# #         volumeMounts:
# #         - name: tmp
# #           mountPath: /tmp
# #       volumes:
# #       - name: tmp
# #         emptyDir: {}

# # ---
# # # Backend Service
# # apiVersion: v1
# # kind: Service
# # metadata:
# #   name: backend-service
# # spec:
# #   type: LoadBalancer
# #   ports:
# #   - port: 5000
# #     targetPort: 5000
# #     protocol: TCP
# #   selector:
# #     app: backend

# # ---
# # # Frontend Deployment
# # apiVersion: apps/v1
# # kind: Deployment
# # metadata:
# #   name: frontend-deployment
# # spec:
# #   replicas: 2
# #   selector:
# #     matchLabels:
# #       app: frontend
# #   template:
# #     metadata:
# #       labels:
# #         app: frontend
# #     spec:
# #       containers:
# #       - name: frontend
# #         image: jai3747/imdb-clone-frontend:latest
# #         imagePullPolicy: Always
# #         ports:
# #         - containerPort: 3000
# #         env:
# #         - name: HOST
# #           value: "0.0.0.0"
# #         - name: PORT
# #           value: "3000"
# #         - name: REACT_APP_BACKEND_API
# #           valueFrom:
# #             configMapKeyRef:
# #               name: frontend-config
# #               key: REACT_APP_BACKEND_API
# #         - name: NODE_ENV
# #           value: "production"
# #         readinessProbe:
# #           httpGet:
# #             path: /
# #             port: 3000
# #           initialDelaySeconds: 30
# #           periodSeconds: 10
# #         livenessProbe:
# #           httpGet:
# #             path: /
# #             port: 3000
# #           initialDelaySeconds: 60
# #           periodSeconds: 20
# #         resources:
# #           requests:
# #             memory: "256Mi"
# #             cpu: "100m"
# #           limits:
# #             memory: "512Mi"
# #             cpu: "200m"
# #         volumeMounts:
# #         - name: tmp
# #           mountPath: /tmp
# #       volumes:
# #       - name: tmp
# #         emptyDir: {}

# # ---
# # # Frontend Service
# # apiVersion: v1
# # kind: Service
# # metadata:
# #   name: frontend-service
# # spec:
# #   type: LoadBalancer
# #   ports:
# #   - port: 80
# #     targetPort: 3000
# #     protocol: TCP
# #   selector:
# #     app: frontend

# # ---
# # # Frontend ConfigMap
# # apiVersion: v1
# # kind: ConfigMap
# # metadata:
# #   name: frontend-config
# # data:
# #   REACT_APP_BACKEND_API: "http://34.100.186.170:5000/api"
# # MongoDB Secret
# apiVersion: v1
# kind: Secret
# metadata:
#   name: mongodb-secret
# type: Opaque
# stringData:
#   MONGO_URL: mongodb+srv://jayachandran:jc@3747@jai@cluster0.w45he.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0

# ---
# # MongoDB ConfigMap
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: mongodb-configmap
# data:
#   MONGODB_INITDB_DATABASE: "imdb"

# ---
# # MongoDB Storage Class
# apiVersion: storage.k8s.io/v1
# kind: StorageClass
# metadata:
#   name: mongodb-sc
# provisioner: kubernetes.io/gce-pd
# parameters:
#   type: pd-ssd

# ---
# # MongoDB StatefulSet
# apiVersion: apps/v1
# kind: StatefulSet
# metadata:
#   name: mongodb
# spec:
#   serviceName: mongodb-service
#   replicas: 2
#   selector:
#     matchLabels:
#       app: mongodb
#   template:
#     metadata:
#       labels:
#         app: mongodb
#     spec:
#       securityContext:
#         fsGroup: 999
#         runAsUser: 999
#         runAsNonRoot: true
#       containers:
#       - name: mongodb
#         image: mongo:6.0
#         ports:
#         - containerPort: 27017
#         env:
#         - name: MONGO_INITDB_DATABASE
#           valueFrom:
#             configMapKeyRef:
#               name: mongodb-configmap
#               key: MONGODB_INITDB_DATABASE
#         resources:
#           requests:
#             memory: "512Mi"
#             cpu: "250m"
#           limits:
#             memory: "1Gi"
#             cpu: "500m"
#         volumeMounts:
#         - name: mongodb-data
#           mountPath: /data/db
#         - name: mongodb-tmp
#           mountPath: /tmp
#       volumes:
#       - name: mongodb-tmp
#         emptyDir: {}
#   volumeClaimTemplates:
#   - metadata:
#       name: mongodb-data
#     spec:
#       accessModes: [ "ReadWriteOnce" ]
#       storageClassName: mongodb-sc
#       resources:
#         requests:
#           storage: 1Gi

# ---
# # MongoDB Service
# apiVersion: v1
# kind: Service
# metadata:
#   name: mongodb-service
# spec:
#   type: ClusterIP
#   ports:
#   - port: 27017
#     targetPort: 27017
#   selector:
#     app: mongodb

# ---
# # Backend Deployment
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: backend-deployment
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: backend
#   template:
#     metadata:
#       labels:
#         app: backend
#     spec:
#       containers:
#       - name: backend
#         image: jai3747/imdb-clone-backend:latest
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 5000
#         env:
#         - name: PORT
#           value: "5000"
#         - name: NODE_ENV
#           value: "production"
#         - name: MONGO_URL
#           valueFrom:
#             secretKeyRef:
#               name: mongodb-secret
#               key: MONGO_URL
#         readinessProbe:
#           httpGet:
#             path: /api/health
#             port: 5000
#           initialDelaySeconds: 30
#           periodSeconds: 10
#           timeoutSeconds: 1
#           failureThreshold: 3
#         livenessProbe:
#           httpGet:
#             path: /api/health
#             port: 5000
#           initialDelaySeconds: 60
#           periodSeconds: 20
#           timeoutSeconds: 1
#           failureThreshold: 3
#         resources:
#           requests:
#             memory: "256Mi"
#             cpu: "100m"
#           limits:
#             memory: "512Mi"
#             cpu: "200m"
#         volumeMounts:
#         - name: tmp
#           mountPath: /tmp
#       volumes:
#       - name: tmp
#         emptyDir: {}

# ---
# # Backend Service
# apiVersion: v1
# kind: Service
# metadata:
#   name: backend-service
# spec:
#   type: LoadBalancer
#   ports:
#   - port: 5000
#     targetPort: 5000
#     protocol: TCP
#   selector:
#     app: backend

# ---
# # Frontend Deployment
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: frontend-deployment
# spec:
#   replicas: 2
#   selector:
#     matchLabels:
#       app: frontend
#   template:
#     metadata:
#       labels:
#         app: frontend
#     spec:
#       containers:
#       - name: frontend
#         image: jai3747/imdb-clone-frontend:latest
#         imagePullPolicy: Always
#         ports:
#         - containerPort: 3000
#         env:
#         - name: HOST
#           value: "0.0.0.0"
#         - name: PORT
#           value: "3000"
#         - name: REACT_APP_BACKEND_API
#           valueFrom:
#             configMapKeyRef:
#               name: frontend-config
#               key: REACT_APP_BACKEND_API
#         - name: NODE_ENV
#           value: "production"
#         readinessProbe:
#           httpGet:
#             path: /
#             port: 3000
#           initialDelaySeconds: 30
#           periodSeconds: 10
#           timeoutSeconds: 1
#           failureThreshold: 3
#         livenessProbe:
#           httpGet:
#             path: /
#             port: 3000
#           initialDelaySeconds: 60
#           periodSeconds: 20
#           timeoutSeconds: 1
#           failureThreshold: 3
#         resources:
#           requests:
#             memory: "256Mi"
#             cpu: "100m"
#           limits:
#             memory: "512Mi"
#             cpu: "200m"
#         volumeMounts:
#         - name: tmp
#           mountPath: /tmp
#       volumes:
#       - name: tmp
#         emptyDir: {}

# ---
# # Frontend Service
# apiVersion: v1
# kind: Service
# metadata:
#   name: frontend-service
# spec:
#   type: LoadBalancer
#   ports:
#   - port: 80
#     targetPort: 3000
#     protocol: TCP
#   selector:
#     app: frontend

# ---
# # Frontend ConfigMap
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: frontend-config
# data:
#   REACT_APP_BACKEND_API: "http://34.100.186.170:5000/api"
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
type: Opaque
stringData:
  MONGO_URL: mongodb+srv://JAYACHANDRAN:KQJrxDn44181NsqT@cluster0.w45he.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-configmap
data:
  MONGODB_INITDB_DATABASE: "imdb"

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: mongodb-sc
provisioner: kubernetes.io/gce-pd
parameters:
  type: pd-ssd

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
spec:
  serviceName: mongodb-service
  replicas: 2
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      securityContext:
        fsGroup: 999
        runAsUser: 999
        runAsNonRoot: true
      containers:
      - name: mongodb
        image: mongo:6.0
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: mongodb-configmap
              key: MONGODB_INITDB_DATABASE
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-tmp
          mountPath: /tmp
      volumes:
      - name: mongodb-tmp
        emptyDir: {}
  volumeClaimTemplates:
  - metadata:
      name: mongodb-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: mongodb-sc
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  type: ClusterIP
  ports:
  - port: 27017
    targetPort: 27017
  selector:
    app: mongodb

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: jai3747/imdb-clone-backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5000
        env:
        - name: PORT
          value: "5000"
        - name: NODE_ENV
          value: "production"
        - name: MONGO_URL
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: MONGO_URL
        readinessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/health
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 1
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: LoadBalancer
  ports:
  - port: 5000
    targetPort: 5000
  selector:
    app: backend

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: jai3747/imdb-clone-frontend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        env:
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "3000"
        - name: REACT_APP_BACKEND_API
          valueFrom:
            configMapKeyRef:
              name: frontend-config
              key: REACT_APP_BACKEND_API
        readinessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /
            port: 3000
          initialDelaySeconds: 60
          periodSeconds: 20
          timeoutSeconds: 1
          failureThreshold: 3
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000
  selector:
    app: frontend

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: frontend-config
data:
  REACT_APP_BACKEND_API: "http://34.100.186.170:5000/api"
